DEBUG main org.hibernate.mapping.PrimaryKey - Forcing column [cod_departamento] to be non-null as it is part of the primary key for table [departamento]
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.cfg.Settings - SessionFactory name : null
DEBUG main org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
DEBUG main org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.Settings - Statistics: disabled
DEBUG main org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.Settings - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
DEBUG main org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.Settings - Default batch fetch size: -1
DEBUG main org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
DEBUG main org.hibernate.cfg.Settings - Default null ordering: NONE
DEBUG main org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.Settings - JTA Track by Thread: enabled
DEBUG main org.hibernate.cfg.Settings - Query language substitutions: {}
DEBUG main org.hibernate.cfg.Settings - JPA query language strict compliance: disabled
DEBUG main org.hibernate.cfg.Settings - Named query checking : enabled
DEBUG main org.hibernate.cfg.Settings - Second-level cache: enabled
DEBUG main org.hibernate.cfg.Settings - Second-level query cache: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1d71006f
DEBUG main org.hibernate.cfg.Settings - Second-level cache region prefix: null
DEBUG main org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
DEBUG main org.hibernate.cfg.Settings - JDBC batch size: 15
DEBUG main org.hibernate.cfg.Settings - JDBC batch updates for versioned data: disabled
DEBUG main org.hibernate.cfg.Settings - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.Settings - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
DEBUG main org.hibernate.cfg.Settings - JDBC result set fetch size: null
DEBUG main org.hibernate.cfg.Settings - Connection release mode: ON_CLOSE
DEBUG main org.hibernate.cfg.Settings - Generate SQL with comments: disabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jre1.8.0_73\lib\resources.jar;C:\Program Files\Java\jre1.8.0_73\lib\rt.jar;C:\Program Files\Java\jre1.8.0_73\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_73\lib\jce.jar;C:\Program Files\Java\jre1.8.0_73\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_73\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\cldrdata.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\dnsns.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\jaccess.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\jfxrt.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\localedata.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\nashorn.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\sunec.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\sunmscapi.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jre1.8.0_73\lib\ext\zipfs.jar;D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\test-classes;D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\classes;D:\mavenRepository\junit\junit\4.12\junit-4.12.jar;D:\mavenRepository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\mavenRepository\org\mockito\mockito-core\2.12.0\mockito-core-2.12.0.jar;D:\mavenRepository\net\bytebuddy\byte-buddy\1.7.9\byte-buddy-1.7.9.jar;D:\mavenRepository\net\bytebuddy\byte-buddy-agent\1.7.9\byte-buddy-agent-1.7.9.jar;D:\mavenRepository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;D:\mavenRepository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;D:\mavenRepository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\mavenRepository\org\springframework\spring-webmvc\4.3.7.RELEASE\spring-webmvc-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-beans\4.3.7.RELEASE\spring-beans-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-context\4.3.7.RELEASE\spring-context-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-core\4.3.7.RELEASE\spring-core-4.3.7.RELEASE.jar;D:\mavenRepository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;D:\mavenRepository\org\springframework\spring-expression\4.3.7.RELEASE\spring-expression-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-web\4.3.7.RELEASE\spring-web-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-aop\4.3.7.RELEASE\spring-aop-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-orm\4.3.7.RELEASE\spring-orm-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-jdbc\4.3.7.RELEASE\spring-jdbc-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-tx\4.3.7.RELEASE\spring-tx-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-test\4.3.7.RELEASE\spring-test-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\data\spring-data-jpa\2.0.1.RELEASE\spring-data-jpa-2.0.1.RELEASE.jar;D:\mavenRepository\org\springframework\data\spring-data-commons\2.0.1.RELEASE\spring-data-commons-2.0.1.RELEASE.jar;D:\mavenRepository\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\mavenRepository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\mavenRepository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;D:\mavenRepository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;D:\mavenRepository\org\hibernate\hibernate-core\5.2.10.Final\hibernate-core-5.2.10.Final.jar;D:\mavenRepository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\mavenRepository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\mavenRepository\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\mavenRepository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\mavenRepository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\mavenRepository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\mavenRepository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\mavenRepository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\mavenRepository\org\hibernate\hibernate-entitymanager\5.2.10.Final\hibernate-entitymanager-5.2.10.Final.jar;D:\mavenRepository\org\hibernate\hibernate-validator\5.1.3.Final\hibernate-validator-5.1.3.Final.jar;D:\mavenRepository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\mavenRepository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\mavenRepository\ojdbc\ojdbc\14-10gR3\ojdbc-14-10gR3.jar;D:\backup(D)\Eclipse Oxygen\eclipse\configuration\org.eclipse.osgi\413\0\.cp;D:\backup(D)\Eclipse Oxygen\eclipse\configuration\org.eclipse.osgi\412\0\.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT-03:00, os.name=Windows 8, java.vm.specification.version=1.8, user.country=BR, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_73\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 7923 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames br.com.springmvc.test.DepartamentoDaoTest, sun.cpu.endian=little, user.home=C:\Users\THIAGO MAIA, user.language=pt, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_73, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_73\lib\resources.jar;C:\Program Files\Java\jre1.8.0_73\lib\rt.jar;C:\Program Files\Java\jre1.8.0_73\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_73\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_73\lib\jce.jar;C:\Program Files\Java\jre1.8.0_73\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_73\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_73\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=THIAGO MAIA, path.separator=;, os.version=6.2, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_73\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@5caf905d], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\THIAGO~1\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5398edd0, java.library.path=C:\Program Files\Java\jre1.8.0_73\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_73/bin/server;C:/Program Files/Java/jre1.8.0_73/bin;C:/Program Files/Java/jre1.8.0_73/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\VDownloader\;C:\Users\THIAGO MAIA\AppData\Local\Smartbar\Application\;C:\Program Files (x86)\Internet Explorer;C:\Users\THIAGO MAIA\AppData\Local\Smartbar\Application\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files\Maven\apache-maven-3.2.1\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Program Files\Heroku\bin;C:\Users\THIAGO MAIA\AppData\Roaming\npm;C:\Program Files\Microsoft VS Code\bin;D:\backup(D)\Eclipse Oxygen\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6bf0219d, java.ext.dirs=C:\Program Files\Java\jre1.8.0_73\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
INFO main org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.3.Final
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG main org.hibernate.cfg.beanvalidation.TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [br.com.springmvc.model.Departamento] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.com.springmvc.model.Departamento
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [br.com.springmvc.model.Departamento] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.com.springmvc.model.Departamento
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: br.com.springmvc.model.Departamento
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select COD_DEPARTAMENTO from DEPARTAMENTO where COD_DEPARTAMENTO =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select departamen_.COD_DEPARTAMENTO, departamen_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_, departamen_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_ from DEPARTAMENTO departamen_ where departamen_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into DEPARTAMENTO (LOCALIZACAO_DEPARTAMENTO, NOME_DEPARTAMENTO, COD_DEPARTAMENTO) values (?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update DEPARTAMENTO set LOCALIZACAO_DEPARTAMENTO=?, NOME_DEPARTAMENTO=? where COD_DEPARTAMENTO=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from DEPARTAMENTO where COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4943defe]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [NONE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@194152cf]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [READ]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c30b71f]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [UPGRADE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec50f54]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [UPGRADE_NOWAIT]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update nowait
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d6cac2]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [UPGRADE_SKIPLOCKED]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update skip locked
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1654a892]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [FORCE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update nowait
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3163987e]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_READ]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f233b26]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_WRITE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6974a715]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_FORCE_INCREMENT]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update nowait
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43d455c9]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [OPTIMISTIC]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ec531]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [OPTIMISTIC_FORCE_INCREMENT]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity br.com.springmvc.model.Departamento: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity br.com.springmvc.model.Departamento: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@ca66933
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 46263576-48ab-4b92-863b-18d1024a60e6 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'departamentoDaoImpl' to bean named 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.dao.DepartamentoDaoImpl.excluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'departamentoDaoImpl' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [br.com.springmvc.dao.DepartamentoDaoImpl@28486680]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionInterceptor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'applicationConfig'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@6bf0219d] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.web.context.support.GenericWebApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@69eb86b4]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.test.DepartamentoDaoTest': AutowiredFieldElement for private br.com.springmvc.dao.DepartamentoDao br.com.springmvc.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'br.com.springmvc.test.DepartamentoDaoTest' to bean named 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessListarDepartamentos' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.test.DepartamentoDaoTest@375b5b7f]
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessListarDepartamentos()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessBuscarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessBuscarDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessIncluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessIncluirDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessExcluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessExcluirDepartamento()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessBuscarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@278f8425 transactionManagerName = '', defaultRollback = true] for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.test.DepartamentoDaoTest.testSuccessBuscarDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@3a4ba480]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@469d003c]; rollback [true]
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.dao.DepartamentoDaoImpl.buscarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Participating in existing transaction
DEBUG main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@31ddd4a4
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from br.com.springmvc.model.Departamento d where d.codDepartamento = :codDepartamento
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'br'
    |        |  |  |  |  \-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'springmvc'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Departamento'
    |        \-[ALIAS] Node: 'd'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'codDepartamento'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'codDepartamento'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : br.com.springmvc.model.Departamento (d) -> departamen0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d -> departamen0_.COD_DEPARTAMENTO
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : codDepartamento -> org.hibernate.type.LongType@1890516e
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d.codDepartamento -> departamen0_.COD_DEPARTAMENTO
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} DEPARTAMENTO departamen0_ ) ( where ( = ( departamen0_.COD_DEPARTAMENTO departamen0_.COD_DEPARTAMENTO codDepartamento ) ? ) ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [DEPARTAMENTO departamen0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DEPARTAMENTO)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DEPARTAMENTO,tableAlias=departamen0_,origin=null,columns={,className=br.com.springmvc.model.Departamento}}}
    |  \-[SQL_TOKEN] SqlFragment: 'departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[departamen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DEPARTAMENTO departamen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DEPARTAMENTO,tableAlias=departamen0_,origin=null,columns={,className=br.com.springmvc.model.Departamento}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'departamen0_.COD_DEPARTAMENTO' {propertyName=codDepartamento,dereferenceType=PRIMITIVE,getPropertyPath=codDepartamento,path=d.codDepartamento,tableAlias=departamen0_,className=br.com.springmvc.model.Departamento,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'departamen0_.COD_DEPARTAMENTO' {alias=d, className=br.com.springmvc.model.Departamento, tableAlias=departamen0_}
          |  \-[IDENT] IdentNode: 'codDepartamento' {originalText=codDepartamento}
          \-[NAMED_PARAM] ParameterNode: '?' {name=codDepartamento, expectedType=org.hibernate.type.LongType@1890516e}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from br.com.springmvc.model.Departamento d where d.codDepartamento = :codDepartamento
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_,
        departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_,
        departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_ 
    from
        DEPARTAMENTO departamen0_ 
    where
        departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[br.com.springmvc.model.Departamento#1]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [br.com.springmvc.model.Departamento#1]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [br.com.springmvc.model.Departamento#1]
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[br.com.springmvc.model.Departamento#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - rolling back
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
INFO main org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Resetting RequestContextHolder for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@375b5b7f, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.test.DepartamentoDaoTest': AutowiredFieldElement for private br.com.springmvc.dao.DepartamentoDao br.com.springmvc.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.test.DepartamentoDaoTest@7a231dfd]
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@30814f43]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@469d003c]; rollback [true]
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.dao.DepartamentoDaoImpl.atualizarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Participating in existing transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[br.com.springmvc.model.Departamento#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - rolling back
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
INFO main org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Resetting RequestContextHolder for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a231dfd, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@3fdecce, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@3fdecce, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.test.DepartamentoDaoTest': AutowiredFieldElement for private br.com.springmvc.dao.DepartamentoDao br.com.springmvc.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.test.DepartamentoDaoTest@3fdecce]
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@3fdecce, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessIncluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@3fdecce, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@648ee871 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@3fdecce, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.test.DepartamentoDaoTest.testSuccessIncluirDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@344426bf]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57baeedf testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@3fdecce, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@343f4d3d testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@469d003c]; rollback [true]
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.dao.DepartamentoDaoImpl.incluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Participating in existing transaction
DEBUG main org.hibernate.SQL - 
    select
        DEPARTAMENTO_SEQ.nextval 
    from
        dual
DEBUG main org.hibernate.id.enhanced.SequenceStructure - Sequence value obtained: 105
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 105, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[br.com.springmvc.model.Departamento#105]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=1} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - rolling back
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
