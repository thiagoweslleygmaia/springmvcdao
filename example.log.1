DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@68f1b17f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@398dada8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@398dada8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3b74ac8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3b74ac8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@563e4951
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@563e4951
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30c8681
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30c8681
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6304101a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6304101a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a72a540
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a72a540
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5be49b60
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5be49b60
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5717c37
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5717c37
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@727eb8cb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@727eb8cb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2ce6c6ec
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ce6c6ec
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1672fe87
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1672fe87
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1672fe87
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@11f0a5a1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6bf08014
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6bf08014
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6bf08014
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fb19a0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5082d622
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5082d622
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4278284b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4278284b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@53251a66
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53251a66
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@282cb7c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@282cb7c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@409c54f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@409c54f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b8f0a79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7b8b43c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7b8b43c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7b8b43c7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7fcf2fc1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7fcf2fc1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7fcf2fc1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@20435c40
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@488d1cd7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@25f4878b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@25f4878b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@25f4878b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e005dc9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e005dc9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e005dc9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7c214cc0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@301eda63
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@74a6f9c1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@74a6f9c1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63611043
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e8b7643
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e8b7643
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@36cda2c2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@36cda2c2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5b367418
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@46b61c56
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@413f69cc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@54504ecd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54504ecd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fb669c3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49c66ade
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6239aba6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e6104fc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@12359a82
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68df9280
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@479460a6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7164ca4c
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : Oracle
    version : Oracle Database 11g Release 11.1.0.0.0 - Production
      major : 11
      minor : 1
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : Oracle JDBC driver
    version : 10.2.0.3.0
      major : 10
      minor : 2
DEBUG main org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 10.2
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG main org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG main org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: br.com.springmvc.model.Departamento
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Import with entity name Departamento
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Bind entity br.com.springmvc.model.Departamento on table DEPARTAMENTO
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTAMENTO), mappingColumn=COD_DEPARTAMENTO, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property codDepartamento with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [br.com.springmvc.model.Departamento:codDepartamento]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for codDepartamento
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property codDepartamento
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTAMENTO), mappingColumn=LOCALIZACAO_DEPARTAMENTO, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property localizacaoDepartamento with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [br.com.springmvc.model.Departamento:localizacaoDepartamento]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for localizacaoDepartamento
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property localizacaoDepartamento
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTAMENTO), mappingColumn=NOME_DEPARTAMENTO, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property nomeDepartamento with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [br.com.springmvc.model.Departamento:nomeDepartamento]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for nomeDepartamento
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property nomeDepartamento
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for codDepartamento
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for localizacaoDepartamento
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for nomeDepartamento
DEBUG main org.hibernate.mapping.PrimaryKey - Forcing column [cod_departamento] to be non-null as it is part of the primary key for table [departamento]
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.cfg.Settings - SessionFactory name : null
DEBUG main org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
DEBUG main org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.Settings - Statistics: disabled
DEBUG main org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.Settings - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
DEBUG main org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.Settings - Default batch fetch size: -1
DEBUG main org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
DEBUG main org.hibernate.cfg.Settings - Default null ordering: NONE
DEBUG main org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.Settings - JTA Track by Thread: enabled
DEBUG main org.hibernate.cfg.Settings - Query language substitutions: {}
DEBUG main org.hibernate.cfg.Settings - JPA query language strict compliance: disabled
DEBUG main org.hibernate.cfg.Settings - Named query checking : enabled
DEBUG main org.hibernate.cfg.Settings - Second-level cache: enabled
DEBUG main org.hibernate.cfg.Settings - Second-level query cache: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1bdf8190
DEBUG main org.hibernate.cfg.Settings - Second-level cache region prefix: null
DEBUG main org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
DEBUG main org.hibernate.cfg.Settings - JDBC batch size: 15
DEBUG main org.hibernate.cfg.Settings - JDBC batch updates for versioned data: disabled
DEBUG main org.hibernate.cfg.Settings - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.Settings - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
DEBUG main org.hibernate.cfg.Settings - JDBC result set fetch size: null
DEBUG main org.hibernate.cfg.Settings - Connection release mode: ON_CLOSE
DEBUG main org.hibernate.cfg.Settings - Generate SQL with comments: disabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\test-classes;D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\classes;D:\mavenRepository\junit\junit\4.12\junit-4.12.jar;D:\mavenRepository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\mavenRepository\org\mockito\mockito-core\2.12.0\mockito-core-2.12.0.jar;D:\mavenRepository\net\bytebuddy\byte-buddy\1.7.9\byte-buddy-1.7.9.jar;D:\mavenRepository\net\bytebuddy\byte-buddy-agent\1.7.9\byte-buddy-agent-1.7.9.jar;D:\mavenRepository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;D:\mavenRepository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;D:\mavenRepository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\mavenRepository\org\springframework\spring-webmvc\4.3.7.RELEASE\spring-webmvc-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-beans\4.3.7.RELEASE\spring-beans-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-context\4.3.7.RELEASE\spring-context-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-core\4.3.7.RELEASE\spring-core-4.3.7.RELEASE.jar;D:\mavenRepository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;D:\mavenRepository\org\springframework\spring-expression\4.3.7.RELEASE\spring-expression-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-web\4.3.7.RELEASE\spring-web-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-aop\4.3.7.RELEASE\spring-aop-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-orm\4.3.7.RELEASE\spring-orm-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-jdbc\4.3.7.RELEASE\spring-jdbc-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-tx\4.3.7.RELEASE\spring-tx-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-test\4.3.7.RELEASE\spring-test-4.3.7.RELEASE.jar;D:\mavenRepository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;D:\mavenRepository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;D:\mavenRepository\org\hibernate\hibernate-core\5.2.10.Final\hibernate-core-5.2.10.Final.jar;D:\mavenRepository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\mavenRepository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\mavenRepository\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\mavenRepository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\mavenRepository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\mavenRepository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\mavenRepository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\mavenRepository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\mavenRepository\org\hibernate\hibernate-entitymanager\5.2.10.Final\hibernate-entitymanager-5.2.10.Final.jar;D:\mavenRepository\org\hibernate\hibernate-validator\5.1.3.Final\hibernate-validator-5.1.3.Final.jar;D:\mavenRepository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\mavenRepository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\mavenRepository\ojdbc\ojdbc\14-10gR3\ojdbc-14-10gR3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT-03:00, os.name=Windows 8, java.vm.specification.version=1.8, user.country=BR, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\surefire\surefirebooter4288684171564429265.jar D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\surefire\surefire4113020105563786294tmp D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\surefire\surefire_08352344546726897127tmp, surefire.test.class.path=D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\test-classes;D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\classes;D:\mavenRepository\junit\junit\4.12\junit-4.12.jar;D:\mavenRepository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\mavenRepository\org\mockito\mockito-core\2.12.0\mockito-core-2.12.0.jar;D:\mavenRepository\net\bytebuddy\byte-buddy\1.7.9\byte-buddy-1.7.9.jar;D:\mavenRepository\net\bytebuddy\byte-buddy-agent\1.7.9\byte-buddy-agent-1.7.9.jar;D:\mavenRepository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;D:\mavenRepository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;D:\mavenRepository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\mavenRepository\org\springframework\spring-webmvc\4.3.7.RELEASE\spring-webmvc-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-beans\4.3.7.RELEASE\spring-beans-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-context\4.3.7.RELEASE\spring-context-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-core\4.3.7.RELEASE\spring-core-4.3.7.RELEASE.jar;D:\mavenRepository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;D:\mavenRepository\org\springframework\spring-expression\4.3.7.RELEASE\spring-expression-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-web\4.3.7.RELEASE\spring-web-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-aop\4.3.7.RELEASE\spring-aop-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-orm\4.3.7.RELEASE\spring-orm-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-jdbc\4.3.7.RELEASE\spring-jdbc-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-tx\4.3.7.RELEASE\spring-tx-4.3.7.RELEASE.jar;D:\mavenRepository\org\springframework\spring-test\4.3.7.RELEASE\spring-test-4.3.7.RELEASE.jar;D:\mavenRepository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;D:\mavenRepository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;D:\mavenRepository\org\hibernate\hibernate-core\5.2.10.Final\hibernate-core-5.2.10.Final.jar;D:\mavenRepository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\mavenRepository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\mavenRepository\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\mavenRepository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\mavenRepository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\mavenRepository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\mavenRepository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\mavenRepository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\mavenRepository\org\hibernate\hibernate-entitymanager\5.2.10.Final\hibernate-entitymanager-5.2.10.Final.jar;D:\mavenRepository\org\hibernate\hibernate-validator\5.1.3.Final\hibernate-validator-5.1.3.Final.jar;D:\mavenRepository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\mavenRepository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\mavenRepository\ojdbc\ojdbc\14-10gR3\ojdbc-14-10gR3.jar;, sun.cpu.endian=little, user.home=C:\Users\THIAGO MAIA, user.language=pt, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, basedir=D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao\target\surefire\surefirebooter4288684171564429265.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=THIAGO MAIA, path.separator=;, os.version=6.2, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@75b84c92], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, localRepository=D:\mavenRepository, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\THIAGO~1\AppData\Local\Temp\, maven.test.skip=false, java.version=1.8.0_73, user.dir=D:\backup(D)\Eclipse Oxygen\eclipse\workspace\springmvcdao, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@56b78e55, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\VDownloader\;C:\Users\THIAGO MAIA\AppData\Local\Smartbar\Application\;C:\Program Files (x86)\Internet Explorer;C:\Users\THIAGO MAIA\AppData\Local\Smartbar\Application\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files\Maven\apache-maven-3.2.1\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Program Files\Heroku\bin;C:\Users\THIAGO MAIA\AppData\Roaming\npm;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\MongoDB\Server\3.6\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@51dcb805, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
INFO main org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.1.3.Final
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG main org.hibernate.cfg.beanvalidation.TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [br.com.springmvc.model.Departamento] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.com.springmvc.model.Departamento
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [br.com.springmvc.model.Departamento] is safe
DEBUG main org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : br.com.springmvc.model.Departamento
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: br.com.springmvc.model.Departamento
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select COD_DEPARTAMENTO from DEPARTAMENTO where COD_DEPARTAMENTO =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select departamen_.COD_DEPARTAMENTO, departamen_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_, departamen_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_ from DEPARTAMENTO departamen_ where departamen_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into DEPARTAMENTO (LOCALIZACAO_DEPARTAMENTO, NOME_DEPARTAMENTO, COD_DEPARTAMENTO) values (?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update DEPARTAMENTO set LOCALIZACAO_DEPARTAMENTO=?, NOME_DEPARTAMENTO=? where COD_DEPARTAMENTO=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from DEPARTAMENTO where COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47dd778]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [NONE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288a4658]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [READ]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452c8a40]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [UPGRADE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29006752]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [UPGRADE_NOWAIT]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update nowait
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66d57c1b]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [UPGRADE_SKIPLOCKED]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update skip locked
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d59970a]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [FORCE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update nowait
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b98ff6]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_READ]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fcff1b9]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_WRITE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76adb233]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_FORCE_INCREMENT]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update nowait
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36453307]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [OPTIMISTIC]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66eb985d]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [OPTIMISTIC_FORCE_INCREMENT]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity br.com.springmvc.model.Departamento: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity br.com.springmvc.model.Departamento: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@72ab05ed
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 6dcecea2-3815-4ac2-a9d8-237433c2fecf (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'departamentoDaoImpl' to bean named 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionInterceptor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'applicationConfig'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@51dcb805] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.web.context.support.GenericWebApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@286b39c2]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@68e62ca4 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@68e62ca4 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest': AutowiredFieldElement for private br.com.springmvc.departamento.dao.DepartamentoDao br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest' to bean named 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessBuscarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1]
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessBuscarDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessIncluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessIncluirDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessExcluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessExcluirDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessListarDepartamentos' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessListarDepartamentos()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessBuscarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@2d195ee4 transactionManagerName = '', defaultRollback = true] for test class [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@68e62ca4 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessBuscarDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@1e9804b9]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@3ff57625]; rollback [true]
DEBUG main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@432034a
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from br.com.springmvc.model.Departamento d where d.codDepartamento = :codDepartamento
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'br'
    |        |  |  |  |  \-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'springmvc'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Departamento'
    |        \-[ALIAS] Node: 'd'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'codDepartamento'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'codDepartamento'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : br.com.springmvc.model.Departamento (d) -> departamen0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d -> departamen0_.COD_DEPARTAMENTO
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : codDepartamento -> org.hibernate.type.LongType@f14a7d4
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d.codDepartamento -> departamen0_.COD_DEPARTAMENTO
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} DEPARTAMENTO departamen0_ ) ( where ( = ( departamen0_.COD_DEPARTAMENTO departamen0_.COD_DEPARTAMENTO codDepartamento ) ? ) ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [DEPARTAMENTO departamen0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DEPARTAMENTO)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DEPARTAMENTO,tableAlias=departamen0_,origin=null,columns={,className=br.com.springmvc.model.Departamento}}}
    |  \-[SQL_TOKEN] SqlFragment: 'departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[departamen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DEPARTAMENTO departamen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DEPARTAMENTO,tableAlias=departamen0_,origin=null,columns={,className=br.com.springmvc.model.Departamento}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'departamen0_.COD_DEPARTAMENTO' {propertyName=codDepartamento,dereferenceType=PRIMITIVE,getPropertyPath=codDepartamento,path=d.codDepartamento,tableAlias=departamen0_,className=br.com.springmvc.model.Departamento,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'departamen0_.COD_DEPARTAMENTO' {alias=d, className=br.com.springmvc.model.Departamento, tableAlias=departamen0_}
          |  \-[IDENT] IdentNode: 'codDepartamento' {originalText=codDepartamento}
          \-[NAMED_PARAM] ParameterNode: '?' {name=codDepartamento, expectedType=org.hibernate.type.LongType@f14a7d4}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from br.com.springmvc.model.Departamento d where d.codDepartamento = :codDepartamento
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_,
        departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_,
        departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_ 
    from
        DEPARTAMENTO departamen0_ 
    where
        departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[br.com.springmvc.model.Departamento#1]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [br.com.springmvc.model.Departamento#1]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [br.com.springmvc.model.Departamento#1]
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[br.com.springmvc.model.Departamento#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - rolling back
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
INFO main org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Resetting RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@5328a9c1, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@68e62ca4 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@f2ce6b, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@f2ce6b, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@68e62ca4 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest': AutowiredFieldElement for private br.com.springmvc.departamento.dao.DepartamentoDao br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@f2ce6b]
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@f2ce6b, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@f2ce6b, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@68e62ca4 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@f2ce6b, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.departamento.dao.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@25c53f74]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.departamento.dao.test.DepartamentoDaoTest@f2ce6b, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@3ff57625]; rollback [true]
DEBUG main org.hibernate.SQL - 
    select
        departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_,
        departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_,
        departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ 
    from
        DEPARTAMENTO departamen0_ 
    where
        departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [br.com.springmvc.model.Departamento#1]
